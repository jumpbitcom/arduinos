/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/e53eb1d7-6825-4312-bdc0-935d7bf0e762

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int luftfeutigkeit;
  int temperatur;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include <Adafruit_NeoPixel.h>
#include "thingProperties.h"
#include <Wire.h>
#include <SHTSensor.h>
#include <M5Stack.h>
#define M5STACK_FIRE_NEO_NUM_LEDS 10 // Anzahl LEDS
#define M5STACK_FIRE_NEO_DATA_PIN 15

Adafruit_NeoPixel pixels = Adafruit_NeoPixel(M5STACK_FIRE_NEO_NUM_LEDS, M5STACK_FIRE_NEO_DATA_PIN, NEO_GRB + NEO_KHZ800);

SHTSensor sht;

void setup()
{
  M5.begin();
  Wire.begin();
  Serial.begin(9600);
  delay(1000);
  pixels.begin();
  pixels.clear();

  initProperties();
  
  if (sht.init())
  {
    Serial.print("init(): success\n");
  }
  else
  {
    Serial.print("init(): failed\n");
  }
  sht.setAccuracy(SHTSensor::SHT_ACCURACY_MEDIUM);

// Mahlt die wolken und sonne
  M5.Lcd.fillCircle(68, 39, 15, WHITE);
  M5.Lcd.fillCircle(50, 57, 15, WHITE);
  M5.Lcd.fillCircle(34, 74, 15, WHITE);
  M5.Lcd.fillCircle(46, 92, 15, WHITE);
  M5.Lcd.fillCircle(67, 85, 15, WHITE);
  M5.Lcd.fillCircle(74, 63, 15, WHITE);
  M5.Lcd.fillCircle(53, 76, 15, WHITE);
  M5.Lcd.fillCircle(22, 31, 15, YELLOW);

  M5.Lcd.setTextColor(WHITE);
  M5.Lcd.setTextSize(4);

  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop()
{
  int aktuelleTemperatur = 0;
  int aktuelleLuftfeuchtigkeit= 0;
  int letzteTemperatur = 0;
  int letzteLuftfeuchtigkeit = 0;
  static int pixelNumber = 0; // = random(0, M5STACK_FIRE_NEO_NUM_LEDS - 1);

  ArduinoCloud.update();
  M5.update();

  // Controliert Die Led Pixel an hand von der Temperatur
  if (sht.readSample())
  {
    aktuelleTemperatur = sht.getTemperature();
    aktuelleLuftfeuchtigkeit = sht.getHumidity();
    temperatur = aktuelleTemperatur;
    luftfeutigkeit = aktuelleLuftfeuchtigkeit;

    if (aktuelleTemperatur <= 25)
    {
      // If temperature is below 25, set NeoPixel color to blue
      for (pixelNumber = 0; pixelNumber < 10; pixelNumber++)
      {
        pixels.setPixelColor(pixelNumber, pixels.Color(0, 0, 255)); // Shows the BLue color if below 25 degree
        pixels.show();
        delay(100);
      }
    }
    else
    {
      // Otherwise, set NeoPixel color to red
      for (pixelNumber = 0; pixelNumber < 10; pixelNumber++)
      {
        pixels.setPixelColor(pixelNumber, pixels.Color(255, 0, 0)); // Shows the Red color if above 25 degree
        pixels.show();
        delay(100);
      }
    }

    // Clear NeoPixels after displaying color
    pixels.clear();
    //delay(1000);

    // Dieser Teil ist fÃ¼r DIe Messung von Der Temperatur und Der Luftfeuchtigkeit
    if (letzteTemperatur != aktuelleTemperatur)
    {
      letzteTemperatur = aktuelleTemperatur;
      writeTemp(letzteTemperatur);
    }

    if (letzteLuftfeuchtigkeit != aktuelleLuftfeuchtigkeit)
    {
      letzteLuftfeuchtigkeit = aktuelleLuftfeuchtigkeit;
      writeLuft(letzteLuftfeuchtigkeit);
    }
  }
  if (M5.BtnA.isPressed())
  {
    Serial.print("btna pressed success\n");
    M5.Lcd.clear();
    M5.Lcd.setCursor(0, 0);
    if (aktuelleTemperatur <= 25)
      M5.lcd.printf("temp below 25");
    else
      M5.lcd.printf("temp above 25");
    delay(1000);
    M5.Lcd.clear();
    writeTemp(letzteTemperatur);
    writeLuft(letzteLuftfeuchtigkeit);
  }

}
 
void writeTemp(int temperatur)
{
  // Add your code here to act upon Temperatur change
  M5.Lcd.fillRect(250, 77, 50, 50, BLACK);

  M5.Lcd.setCursor(210, 77);
  M5.Lcd.print("T : ");
  M5.Lcd.setCursor(250, 77);
  M5.Lcd.print(temperatur);
}

void writeLuft(int luftfeuchtigkeit)
{
  // Add your code here to act upon Luftfeutigkeit change
  M5.Lcd.fillRect(250, 162, 50, 50, BLACK);

  M5.Lcd.setCursor(210, 162);
  M5.Lcd.print("L : ");
  M5.Lcd.setCursor(250, 162);
  M5.Lcd.print(luftfeuchtigkeit);
}
